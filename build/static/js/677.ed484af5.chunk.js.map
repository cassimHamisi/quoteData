{"version":3,"file":"static/js/677.ed484af5.chunk.js","mappings":"4MACA,EAAwB,gC,SCUxB,EATyB,SAACA,GACxB,OACE,oBAAQC,UAAWC,EAAc,WAC/B,uBAAIF,EAAMG,QACV,gCAAaH,EAAMI,WAGzB,E,2BCKMC,EAAWC,EAAAA,MAAW,kBAAM,4BAAyC,IAqE3E,EAnEoB,WAClB,IAAMC,GAAQC,EAAAA,EAAAA,MACRC,GAAQC,EAAAA,EAAAA,MAEVC,GAAO,GADMC,EAAAA,EAAAA,MAGJC,SAASC,MAAM,KAAE,UAAQL,EAAMM,QAAO,eACjDJ,GAAO,GAGT,IAAQI,EAAYN,EAAZM,QACR,GAKIC,EAAAA,EAAAA,GAAQC,EAAAA,IAJVC,EAAW,EAAXA,YACAC,EAAM,EAANA,OACMC,EAAY,EAAlBC,KACAC,EAAK,EAALA,MAMF,OAJAC,EAAAA,EAAAA,YAAU,WACRL,EAAYH,EACd,GAAG,CAACG,EAAaH,IAEF,YAAXI,GAEA,gBAAKlB,UAAU,WAAU,UACvB,SAACuB,EAAA,EAAc,MAKjBF,GACK,cAAGrB,UAAU,WAAU,SAAEqB,IAE7BF,GAGLK,QAAQC,IAAIrB,IAGV,8BACE,UAAC,EAAAsB,SAAQ,CAACC,UAAU,uBAAG,YAAY,UAChCjB,IACC,SAAC,EAAgB,CACfR,KAAMiB,EAAajB,KACnBC,OAAQgB,EAAahB,UAGzB,gBAAKH,UAAU,WAAU,SACtBU,IACC,SAAC,KAAO,CACNV,UAAU,YACV4B,GAAE,UAAKtB,EAAMuB,MAAI,OAAGrB,EAAMM,QAAO,aACjCgB,OAAK,WACN,oBAKL,UAAC,KAAK,CAACD,KAAI,UAAKvB,EAAMuB,KAAI,aAAY,WACpC,gBAAK7B,UAAU,WAAU,UACvB,wBAAI,sBAEN,SAACI,EAAQ,cA5BR,eAAI2B,MAAO,CAAEC,MAAO,OAAQ,SAAC,kBAiCxC,C","sources":["webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__dE8qA\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { Suspense, useEffect } from \"react\";\nimport {\n  NavLink,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\n// import Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nconst Comments = React.lazy(() => import(\"../components/comments/Comments\"));\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const param = useParams();\n  const location = useLocation();\n  let show = true;\n\n  if (location.pathname.slice(8) === `${param.quoteId}/comments`) {\n    show = false;\n  }\n\n  const { quoteId } = param;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getSingleQuote);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n  if (!loadedQuotes) {\n    return <h1 style={{ color: \"red\" }}>No Quote Found</h1>;\n  }\n  console.log(Comments);\n\n  return (\n    <section>\n      <Suspense fallback={<p>Sending</p>}>\n        {show && (\n          <HighlightedQuote\n            text={loadedQuotes.text}\n            author={loadedQuotes.author}\n          />\n        )}\n        <div className=\"centered\">\n          {show && (\n            <NavLink\n              className=\"btn--flat\"\n              to={`${match.path}${param.quoteId}/comments`}\n              exact\n            >\n              Add Comments\n            </NavLink>\n          )}\n        </div>\n        <Route path={`${match.path}/comments`}>\n          <div className=\"centered\">\n            <h1> Quote Details</h1>\n          </div>\n          <Comments />\n        </Route>\n      </Suspense>\n    </section>\n  );\n};\nexport default QuoteDetail;\n"],"names":["props","className","classes","text","author","Comments","React","match","useRouteMatch","param","useParams","show","useLocation","pathname","slice","quoteId","useHttp","getSingleQuote","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","console","log","Suspense","fallback","to","path","exact","style","color"],"sourceRoot":""}