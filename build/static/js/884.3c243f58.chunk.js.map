{"version":3,"file":"static/js/884.3c243f58.chunk.js","mappings":"qNACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAa,SAAEF,EAAMG,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BCmFnI,EA7EkB,SAACH,GACjB,OAAoCI,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAC1BC,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UA6BrB,OACE,UAAC,EAAAE,SAAQ,YACP,SAAC,KAAM,CACLC,KAAMN,EACNO,QAAS,iBACP,mEAAmE,KAGvE,SAAC,EAAI,WACH,kBACEC,QAtBe,SAACC,GACtBA,EAAMC,iBACNT,GAAc,EAChB,EAoBQL,UAAWC,EACXc,SAvCR,SAA2BF,GACzBA,EAAMC,iBAEN,IAAME,EAAgBV,EAAeW,QAAQC,MACvCC,EAAcX,EAAaS,QAAQC,MAIzCnB,EAAMqB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EA+BQ,UAECpB,EAAMwB,YACL,gBAAKvB,UAAWC,EAAgB,UAC9B,SAACuB,EAAA,EAAc,OAInB,iBAAKxB,UAAWC,EAAgB,WAC9B,kBAAOwB,QAAQ,SAAQ,SAAC,YACxB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKtB,QAEtC,iBAAKN,UAAWC,EAAgB,WAC9B,kBAAOwB,QAAQ,OAAM,SAAC,UACtB,qBACEE,GAAG,OACHE,KAAK,IACLD,IAAKpB,EACLsB,MAAO,CAAEC,SAAU,eAGvB,gBAAK/B,UAAWC,EAAgB,UAC9B,mBAAQ+B,QAnDgB,WAChC3B,GAAc,EAChB,EAiDsDL,UAAU,MAAK,SAAC,uBAQxE,E,SC7DA,EAfiB,WACf,OAAgCiC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OACfC,GAAUC,EAAAA,EAAAA,OAChBC,EAAAA,EAAAA,YAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,UAEjB,GAAG,CAACJ,EAAQC,IAIZ,OACE,SAAC,EAAS,CAACd,UAAsB,YAAXa,EAAsBhB,WAJtB,SAACqB,GACvBN,EAAYM,EACd,GAIF,C","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__9h8Dh\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__ogBoi\",\"loading\":\"QuoteForm_loading__gyIuQ\",\"control\":\"QuoteForm_control__8SqBM\",\"actions\":\"QuoteForm_actions__I8AC6\"};","import { Fragment, useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringDataHandler = () => {\n    setIsEntering(false);\n  };\n\n  const onFocusHandler = (event) => {\n    event.preventDefault();\n    setIsEntering(true);\n  };\n\n  // const onBlurFormHandler = (event) => {\n  //   event.preventDefault();\n  //   console.log(\"----Blur-----\");\n  //   event.target.value && setIsEntering(true);\n  //   !event.target.value && setIsEntering(false);\n  // };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={() =>\n          \"Form Not Submitted!! All Data will be lost if you leave this Page\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={onFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n          // onBlur={onBlurFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea\n              id=\"text\"\n              rows=\"5\"\n              ref={textInputRef}\n              style={{ maxWidth: \"600px\" }}\n            ></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringDataHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from \"react-router-dom\";\nimport useHttp from \"../hooks/use-http\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport { addQuote } from \"../lib/api\";\nimport { useEffect } from \"react\";\n\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [status, history]);\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n  return (\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\n  );\n};\nexport default NewQuote;\n"],"names":["props","className","classes","children","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","Fragment","when","message","onFocus","event","preventDefault","onSubmit","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","style","maxWidth","onClick","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"sourceRoot":""}